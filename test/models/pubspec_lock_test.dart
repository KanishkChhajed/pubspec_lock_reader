import 'package:pubspec_lock_reader/src/models/enums/dependency_type.dart';
import 'package:pubspec_lock_reader/src/models/package_dependency.dart';
import 'package:pubspec_lock_reader/src/models/pubspec_lock.dart';
import 'package:test/test.dart';

/// Tests [PubspecLock]

Future main() async {
  group('[Models] PubspecLock', () {
    final pubspecString = '''
# Generated by pub
# See https://dart.dev/tools/pub/glossary#lockfile
packages:
  charcode:
    dependency: transitive
    description:
      name: charcode
      url: "https://pub.dartlang.org"
    source: hosted
    version: "1.1.3"
  dependency_visitor:
    dependency: "direct main"
    description:
      path: ".."
      relative: true
    source: path
    version: "0.1.4"
  flutter:
    dependency: "direct main"
    description: flutter
    source: sdk
    version: "0.0.0"
  o_popup:
    dependency: "direct main"
    description:
      path: "."
      ref: HEAD
      resolved-ref: a02107b42d599d5f0a326ae666c4fe2ecb0fba71
      url: "git@github.com:owczaro/o_popup.git"
    source: git
    version: "1.0.0"
    ''';
    final pubspecLock = PubspecLock(pubspecString);
    final firstPackage = pubspecLock.packages.elementAt(0);
    final secondPackage = pubspecLock.packages.elementAt(1);
    final thirdPackage = pubspecLock.packages.elementAt(2);
    final fourthPackage = pubspecLock.packages.elementAt(3);

    test('PubspecLock.packages HostedPackageDependency', () async {
      expect(firstPackage, isA<HostedPackageDependency>());
      expect(firstPackage.package, 'charcode');
      expect(firstPackage.version, '1.1.3');
      expect(firstPackage.type, DependencyType.transitive);
      expect((firstPackage as HostedPackageDependency).name, 'charcode');
      expect((firstPackage).url, 'https://pub.dartlang.org');
    });

    test('PubspecLock.packages PathPackageDependency', () async {
      expect(secondPackage, isA<PathPackageDependency>());
      expect(secondPackage.package, 'dependency_visitor');
      expect(secondPackage.version, '0.1.4');
      expect(secondPackage.type, DependencyType.direct);
      expect((secondPackage as PathPackageDependency).path, '..');
      expect((secondPackage).relative, true);
    });

    test('PubspecLock.packages SdkPackageDependency', () async {
      expect(thirdPackage, isA<SdkPackageDependency>());
      expect(thirdPackage.package, 'flutter');
      expect(thirdPackage.version, '0.0.0');
      expect(thirdPackage.type, DependencyType.direct);
      expect((thirdPackage as SdkPackageDependency).description, 'flutter');
    });

    test('PubspecLock.packages GitPackageDependency', () async {
      expect(fourthPackage, isA<GitPackageDependency>());
      expect(fourthPackage.package, 'o_popup');
      expect(fourthPackage.version, '1.0.0');
      expect(fourthPackage.type, DependencyType.direct);
      expect((fourthPackage as GitPackageDependency).ref, 'HEAD');
      expect(fourthPackage.url, 'git@github.com:owczaro/o_popup.git');
      expect(fourthPackage.path, '.');
      expect(
        fourthPackage.resolvedRef,
        'a02107b42d599d5f0a326ae666c4fe2ecb0fba71',
      );
    });
  });
}
